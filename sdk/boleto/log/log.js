const rest = require('../../utils/rest.js');
const check = require('../../utils/check.js');
const Resource = require('../../utils/resource.js').Resource


class Log extends Resource {
    /**
     *
     * Boleto Log object
     *
     * Every time a Boleto entity is updated, a corresponding Boleto Log
     * is generated for the entity. This log is never generated by the
     * user, but it can be retrieved to check additional information
     * on the Boleto.
     *
     * Attributes:
     * id [string]: unique id returned when the log is created. ex: '5656565656565656'
     * boleto [Boleto]: Boleto entity to which the log refers to.
     * errors [list of strings]: list of errors linked to this Boleto event
     * type [string]: type of the Boleto event which triggered the log creation. ex: 'registered' or 'paid'
     * created [string]: creation datetime for the boleto. ex: '2020-03-10 10:30:00.000'
     *
     */
    constructor({created, type, errors, boleto, id}) {
        super(id);
        this.created = check.date(created);
        this.type = type;
        this.errors = errors;
        this.boleto = boleto;
    }
}

exports.Log = Log;
let resource = {'class': exports.Log, 'name': 'BoletoLog'};


exports.get = async function (id, {user} = {}) {
    /**
     *
     * Retrieve a specific Boleto Log
     *
     * Receive a single Boleto Log object previously created by the Stark Bank API by passing its id
     *
     * Parameters (required):
     * id [string]: object unique id. ex: '5656565656565656'
     *
     * Parameters (optional):
     * user [Project object]: Project object. Not necessary if starkbank.user was set before function call
     *
     * Return:
     * Boleto Log object with updated attributes
     *
     */
    return rest.getId(resource, id, user);
};

exports.query = async function ({limit, after, before, types, boletoIds, user} = {}) {
    /**
     *
     * Retrieve Boleto Logs
     *
     * Receive a generator of Boleto Log objects previously created in the Stark Bank API
     *
     * Parameters (optional):
     * limit [integer, default null]: maximum number of objects to be retrieved. Unlimited if null. ex: 35
     * after [string, default null] date filter for objects created only after specified date. ex: '2020-03-10'
     * before [string, default null] date filter for objects only before specified date. ex: '2020-03-10'
     * types [list of strings, default null]: filter for log event types. ex: 'paid' or 'registered'
     * boletoIds [list of strings, default null]: list of Boleto ids to filter logs. ex: ['5656565656565656', '4545454545454545']
     * user [Project object, default null]: Project object. Not necessary if starkbank.user was set before function call
     *
     * Return:
     * list of Boleto Log objects with updated attributes
     *
     */
    let query = {limit, after, before, types, boletoIds};

    return rest.getList(resource, query, user);
};
