const rest = require('../utils/rest.js');

class Balance {
    /**
     *
     * Balance object
     *
     * The Balance object displays the current balance of the workspace,
     * which is the result of the sum of all transactions within this
     * workspace. The balance is never generated by the user, but it
     * can be retrieved to see the information available.
     *
     * Attributes (return-only):
     * id [string, default None]: unique id returned when Boleto is created. ex: '5656565656565656'
     * amount [integer, default None]: current balance amount of the workspace in cents. ex: 200 (= R$ 2.00)
     * currency [string, default None]: currency of the current workspace. Expect others to be added eventually. ex: 'BRL'
     * updated [string, default None]: update datetime for the balance. ex: '2020-03-10 10:30:00.000'
     *
     */
    constructor(id = null, amount = null, currency = null,
                updated = null,) {
        this.amount = amount;
        this.currency = currency;
        this.updated = updated;
        this.id = id;
    }
}

exports.Balance = Balance;
let resource = exports.Balance;


exports.get = async function (user = null) {
    /**
     *
     * Retrieve the Balance object
     *
     * Receive the Balance object linked to your workspace in the Stark Bank API
     *
     * Parameters (optional):
     * user [Project object]: Project object. Not necessary if starkbank.user was set before function call
     *
     * Return:
     * Balance object with updated attributes
     *
     */
    let balance = await rest.getList(resource, 100, user).next();
    return balance['value'];
};
